estate_peasants_land_rights = {
	icon = privilege_grant_autonomy
	land_share = 5
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = 0.05
	influence = 0.05
	can_select = {
	}
	on_granted = {
	}
	penalties = {
	}
	conditional_modifier = {
		trigger = { has_country_flag = mng_increased_land_rights_flag }
		modifier = {
			stability_cost_modifier = -0.05
		}
	}
	benefits = {
		governing_capacity = 100
	}
	ai_will_do = {
		factor = 5
	}
}
estate_peasants_autonomous_communities = {
	icon = privilege_grant_autonomy
	land_share = 10
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.1
	influence = 0.15
	can_select = {
	}
	on_granted = {
	}
	penalties = {
	}
	conditional_modifier = {
	}
	modifier_by_land_ownership = {
		governing_capacity_modifier = -0.2
		development_cost = -0.15
	}
	mechanics = {
		exempt_from_seize_land
	}
	ai_will_do = {
		factor = 5
	}
}
estate_peasants_promote_festivals = {
	icon = privilege_serf
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = 0.1
	influence = 0.1
	can_select = {
	}
	ai_will_do = {
		factor = 5
	}
}
estate_peasants_peace_war_separation = {
	icon = privilege_multiple_professions
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = -0.05
	influence = 0.0
	can_select = {
	}
	on_granted = {
		custom_tooltip = estate_peasants_peace_war_separation_tooltip
	}
	conditional_modifier = {
		trigger = {
			is_at_war = yes
		}
		modifier = {
			war_exhaustion = 0.02
			manpower_recovery_speed = 0.15
		}
	}
	conditional_modifier = {
		trigger = {
			is_at_war = no
		}
		modifier = {
			global_manpower_modifier = -0.20
			production_efficiency = 0.10
		}
	}
	ai_will_do = {
		factor = 5
	}
}
estate_peasants_advisors = {
	icon = privilege_recruit_minister
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	influence = 0.1
	loyalty = 0.05
	penalties = {
		stability_cost_modifier = 0.1
	}
	can_select = { 
	}
	benefits = {
		advisor_cost = -0.075
	}
	ai_will_do = {
		factor = 9
		modifier = {
			factor = 0.5
			is_absolutism_active = yes
		}
		modifier = {
			factor = 3
			uses_meritocracy = yes
		}
	}
}
estate_peasants_expanded_freedoms = {
	icon = privilege_aged_paper
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	influence = 0.1
	loyalty = 0.1
	can_select = {
		NOT = { has_estate_privilege = estate_nobles_protect_rural_nobility }
	}
	penalties = {
		nobles_loyalty_modifier = -0.1
	}
	benefits = {
		global_unrest = -0.01
	}
	ai_will_do = { 
		factor = 5
		modifier = {
			factor = 0.1
			estate_influence = {
				estate = estate_nobles
				influence = 50
			}
		}
		modifier = {
			factor = 2
			government = republic
		}
		modifier = {
			factor = 10
			OR = {
				has_reform = masccion_dictatorship_reform
				has_reform = peasants_republic
			}
		}
	}
}

estate_peasants_rural_development_effort = {
	icon = privilege_serf
	loyalty = 0.1
	influence = 0.05
	max_absolutism = -10
	is_valid = {
		OR = {
			has_estate_privilege = estate_peasants_rural_development_effort
			any_owned_province = {
				OR = {
					trade_goods = livestock
					trade_goods = grain
				}
			}
		}
	}
	can_select = {
		any_owned_province = {
			OR = {
				trade_goods = livestock
				trade_goods = grain
			}
		}
	}
	on_granted = {
		custom_tooltip = estate_peasants_rural_development_effort_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				OR = {
					trade_goods = livestock
					trade_goods = grain
				}
			}
			add_province_modifier = {
				name = estate_peasants_rural_development
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_peasants_rural_development
			}
			remove_province_modifier = estate_peasants_rural_development
		}
	}
	on_revoked = {
		custom_tooltip = estate_peasants_rural_development_effort_effect_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_peasants_rural_development
			}
			remove_province_modifier = estate_peasants_rural_development
		}
	}
	on_invalid = {
		custom_tooltip = estate_peasants_rural_development_effort_effect_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_peasants_rural_development
			}
			remove_province_modifier = estate_peasants_rural_development
		}
	}
	ai_will_do = {
		factor = 1000
	}
	mechanics = {
		no_estate_crownland_loss_from_developing
	}
}

estate_peasants_monopoly_of_grain = {
	icon = privilege_monopoly_of_goods_livestock
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.05
	is_valid = {
		OR = {
			has_dlc = "Emperor"
			has_country_flag = buffed_monopolies
		}
		any_owned_province = {
			trade_goods = grain
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
	}
	on_granted = {
		add_years_of_owned_provinces_production_income = {
			years = 12
			trigger = {
				trade_goods = grain
			}
			custom_tooltip = MONOPOLY_INCOME_LIVESTOCK_DESC
		}
		custom_tooltip = estate_peasants_monopoly_of_grain_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = grain
			}
			add_province_modifier = {
				name = estate_peasants_monopoly_of_grain_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_peasants_monopoly_of_grain_mod
			}
			remove_province_modifier = estate_peasants_monopoly_of_grain_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_peasants_monopoly_of_grain_effect_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_peasants_monopoly_of_grain_mod
			}
			remove_province_modifier = estate_peasants_monopoly_of_grain_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_peasants_monopoly_of_grain_effect_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_peasants_monopoly_of_grain_mod
			}
			remove_province_modifier = estate_peasants_monopoly_of_grain_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	conditional_modifier = {
		trigger = {
			has_country_flag = buffed_monopolies
		}
		modifier = {
			max_absolutism = 10
			peasants_privilege_slots = 1
		}
	}
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.13 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_peasants_monopoly_of_livestock = {
	icon = privilege_monopoly_of_goods_livestock
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.05
	is_valid = {
		OR = {
			has_dlc = "Emperor"
			has_country_flag = buffed_monopolies
		}
		any_owned_province = {
			trade_goods = livestock
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
		NOT = { has_estate_privilege = estate_nobles_monopoly_of_livestock }
	}
	on_granted = {
		add_years_of_owned_provinces_production_income = {
			years = 12
			trigger = {
				trade_goods = livestock
			}
			custom_tooltip = MONOPOLY_INCOME_LIVESTOCK_DESC
		}
		custom_tooltip = estate_peasants_monopoly_of_livestock_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = livestock
			}
			add_province_modifier = {
				name = estate_peasants_monopoly_of_livestock_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_peasants_monopoly_of_livestock_mod
			}
			remove_province_modifier = estate_peasants_monopoly_of_livestock_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_peasants_monopoly_of_livestock_effect_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_peasants_monopoly_of_livestock_mod
			}
			remove_province_modifier = estate_peasants_monopoly_of_livestock_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_peasants_monopoly_of_livestock_effect_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_peasants_monopoly_of_livestock_mod
			}
			remove_province_modifier = estate_peasants_monopoly_of_livestock_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	conditional_modifier = {
		trigger = {
			has_country_flag = buffed_monopolies
		}
		modifier = {
			max_absolutism = 10
			peasants_privilege_slots = 1
		}
	}
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.12 }
	}
	ai_will_do = {
		factor = 0
	}
}
